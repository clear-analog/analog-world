# General
CONFIG_PRINTK=y
# CONFIG_LOG=y
# CONFIG_LOG_DEFAULT_LEVEL=3

# SPI Configuration
CONFIG_SPI=y
CONFIG_GPIO=y # For CS pin if controlled by SPI driver or manually

# UART Configuration
CONFIG_SERIAL=y
# If uart0 was the default console and you've disabled it,
# you might need to disable console or redirect it.
# CONFIG_CONSOLE=n
# CONFIG_UART_CONSOLE=n
# To ensure uart0 driver is built even if disabled in DT (so DEVICE_DT_GET works)
# You'd typically enable the specific driver, e.g., CONFIG_UART_NRF_UARTE=y for nRF
# or CONFIG_UART_STM32=y for STM32.
# For a generic case, ensuring the serial subsystem is on is a start.

# WiFi Configuration
CONFIG_NETWORKING=n # Disables the entire networking stack
CONFIG_WIFI=n       # Specifically disables WiFi subsystem
# Add specific WiFi driver Kconfig disables if necessary, e.g.
# CONFIG_WIFI_NRF700X=n
# CONFIG_WIFI_ESWIFI=n

# Timer/Counter Configuration
CONFIG_COUNTER=y # Enables the counter API, often used for hardware timers
# You'd also need to enable the specific driver for &timer0, e.g.,
# CONFIG_NRF_RTC_TIMER=y (if timer0 is an RTC)
# CONFIG_STM32_LPTIM_TIMER=y (if timer0 is an LPTIM)
# For this example, we'll assume a generic counter driver is enabled by the board.

# If you added a dummy SPI device in the overlay with a specific compatible
# and want Zephyr's dummy driver to pick it up (though not strictly needed for custom handling):
# CONFIG_SPI_SLAVE_DUMMY=y
# CONFIG_SPI_LOOPBACK_DRV_NAME="dummy_spi_peripheral" # Check label in DT